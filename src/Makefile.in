sinclude Makeconf

OCTFILES = avifile.oct aviread.oct aviinfo.oct addframe.oct VideoReader.oct
AVOBJS   = AVHandler.lib.o oct-avifile.lib.o VideoReader.lib.o
#OCTFILES = $(wildcard src/*.cc)
#AVOBJS   = $(wildcard src/*.cpp)
#OCTFILES = $(OCTFILES:%.cc=%.o)
#AVOBJS   = $(AVOBJS:%.cpp=%.lib.o)

FFMPEG_CONFIG = @FFMPEG_CONFIG@
ifdef FFMPEG_CONFIG
  FFMPEG_LIBS = $(shell pkg-config libavformat libavcodec libavutil libswscale --libs)
  FFMPEG_CFLAGS = $(shell pkg-config libavformat libavcodec libavutil libswscale --cflags)
else
  FFMPEG_LIBS = -lavformat -lavcodec -lavutil -lswscale -lz -lm
  FFMPEG_CFLAGS =
endif

OPENCV_FLAGS = $(OPENCV_CFLAGS) $(OPENCV_DEFS) $(OPENCV_LIBS)


.PHONY: all strip
all: ${OCTFILES}

.PHONY: debug
debug: COMMON_CXX += $(DEBUGFLAGS)
debug: all

.PHONY: clean
clean:
	@rm -f *.o *.oct avctest *~ octave-core octave-workspace

oct-avifile.o: AVHandler.o

${AVOBJS}: %.lib.o: %.cpp %.h
	@CXXFLAGS="$(CXXFLAGS) $(COMMON_CXX)" \
	mkoctfile -v -c $(FFMPEG_DEFS) $(FFMPEG_CFLAGS) $(OPENCV_FLAGS) $(CPPFLAGS) $< -o $@

${OCTFILES}: %.oct: %.cc $(AVOBJS)
	@CXXFLAGS="$(CXXFLAGS) $(COMMON_CXX)" \
	mkoctfile -v $(FFMPEG_DEFS) $< $(filter %.o, $^) $(FFMPEG_LIBS) $(FFMPEG_CFLAGS) $(OPENCV_LIBS) $(CPPFLAGS)

avctest.o: avctest.cc
	g++ -Wall -c avctest.cc -o avctest.o

avctest: AVHandler.o avctest.o
	g++ $^ -Wall ${FFMPEG_OPTS} -o $@

.PHONY: strip
strip: all
	strip $(shell find ./* -name "*.oct") avctest

TEST_CASES =   \
	avitest

NOT_BROKEN_TEST_CASES = $(TEST_CASES:=.test)
.PHONY: check
check: $(NOT_BROKEN_TEST_CASES)
%.test:
	octave -q tests/$*.m > /dev/null
